subroutine teno5_p( fps, fpx )
    use commondata
    implicit none
    
    integer :: i, mm, fl 
    real*8 :: fps(-2:2), fpx
    real*8 :: omega(3), fu(3), beta(3), a(3), b(3), ki(3), tao, ct, xd
    real*8 :: tao5, totalpha, alpha(3), fomega(3)

    omega(1) = 0.1d0;   omega(2) = 0.6d0;   omega(3) = 0.3d0;  ct=1d-5
    
    fu(1) =  1.0d0/3.0d0*fps(-2) - 7.0d0/6.0d0*fps(-1) + 11.0d0/6.0d0*fps(0)
    fu(2) = -1.0d0/6.0d0*fps(-1) + 5.0d0/6.0d0*fps(0)  + 1.0d0/3.0d0*fps(1)
    fu(3) =  1.0d0/3.0d0*fps(0)  + 5.0d0/6.0d0*fps(1)  - 1.0d0/6.0d0*fps(2)
    
    beta(1) = 13.0d0/12.0d0*( fps(-2) - 2.0d0*fps(-1) + fps(0) )**2 &
            + 0.25d0*( fps(-2) - 4.0d0*fps(-1) + 3.0d0*fps(0) )**2
    beta(2) = 13.0d0/12.0d0*( fps(-1) - 2.0d0*fps(0) + fps(1) )**2 &
            + 0.25d0*( fps(1) - fps(-1) )**2
    beta(3) = 13.0d0/12.0d0*( fps(0) - 2.0d0*fps(1) + fps(2) )**2 &
            + 0.25d0*( 3.0d0*fps(0) - 4.0d0*fps(1) + fps(2) )**2        
    tao = abs(beta(1) + beta(3) - 2.d0*beta(2))
    do i=1,3
    a(i) = (1.0d0+tao/(beta(i)+eps))**6
    enddo
    do i=1,3
    ki(i) = a(i)/(a(1)+a(2)+a(3))
    enddo
    xd = min(ct,tao)
    do i=1,3    
        if(ki(i).le.xd)then
            b(i)=0.0d0
        else
            b(i)=omega(i)
        endif    
    enddo
    do i=1,3
    alpha(i) = b(i)/(b(1)+b(2)+b(3)) 
    enddo
    totalpha = alpha(1) + alpha(2) + alpha(3)
    fomega(:) = alpha(:)/totalpha
    fpx = fu(1)*fomega(1) + fu(2)*fomega(2) + fu(3)*fomega(3)
    
    return
    end subroutine teno5_p


subroutine teno5_m( fms, fmx )
    use commondata
    implicit none
    
    integer :: i, fl,mm 
    real*8 :: fms(-1:3), fmx
    real*8 :: omega(3), fu(3), beta(3), a(3), b(3), ki(3), ct, xd, tao
    real*8 :: tao5, totalpha, alpha(3), fomega(3)

    omega(1) = 0.1d0;   omega(2) = 0.6d0;   omega(3) = 0.3d0;  ct=1d-5
    
    fu(1) =  1.0d0/3.0d0*fms(3) - 7.0d0/6.0d0*fms(2) + 11.0d0/6.0d0*fms(1)
    fu(2) = -1.0d0/6.0d0*fms(2) + 5.0d0/6.0d0*fms(1) + 1.0d0/3.0d0*fms(0)
    fu(3) =  1.0d0/3.0d0*fms(1) + 5.0d0/6.0d0*fms(0) - 1.0d0/6.0d0*fms(-1)
    
    beta(1) = 13.0d0/12.0d0*( fms(3) - 2.0d0*fms(2) + fms(1) )**2 &
            + 0.25d0*( fms(3) - 4.0d0*fms(2) + 3.0d0*fms(1) )**2
    beta(2) = 13.0d0/12.0d0*( fms(2) - 2.0d0*fms(1) + fms(0) )**2 &
            + 0.25d0*( fms(2) - fms(0) )**2
    beta(3) = 13.0d0/12.0d0*( fms(1) - 2.0d0*fms(0) + fms(-1) )**2 &
            + 0.25d0*( 3.0d0*fms(1) - 4.0d0*fms(0) + fms(-1) )**2
    tao = abs(beta(1) + beta(3) - 2.d0*beta(2))
    do i=1,3
    a(i) = (1.0d0+tao/(beta(i)+eps))**6
    enddo
    do i=1,3
    ki(i) = a(i)/(a(1)+a(2)+a(3))
    enddo
    xd = min(ct,tao)
    do i=1,3    
        if(ki(i).le.xd)then
            b(i)=0.0d0
        else
            b(i)=omega(i)
        endif    
    enddo
    do i=1,3
    alpha(i) = b(i)/(b(1)+b(2)+b(3)) 
    enddo
    totalpha = alpha(1) + alpha(2) + alpha(3)
    fomega(:) = alpha(:)/totalpha
    
    fmx = fu(1)*fomega(1) + fu(2)*fomega(2) + fu(3)*fomega(3)
    
    return
    end subroutine teno5_m
